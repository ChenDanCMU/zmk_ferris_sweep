/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
TODOs/ideas:
2. add a qwerty layer
3. add a gaming layer
4. add a maintainance layer (for reset, ble/usb, etc.)
5. add a combo for returning to base layer
6. add a media layer?
7. custom shift 
8. alt+tab
9. gui+num layer/nav layer on key, for tiling window manager navigation
10. select-line macro
*/
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#define BASE 0
#define QWE 1
#define GME 2
#define NUM 3
#define NAV 4
#define FNC 5

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};
&lt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
   quick-tap-ms = <250>;
};
/ { 
    macros {
        word_return: word_return {
            label = "word_return";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <30>;
            tap-ms = <30>;
            bindings
                = <&kp R &kp E &kp T &kp U &kp R &kp N &kp SPACE>;
        };
	 pair_par: pair_par {
            label = "pair_par";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <30>;
            tap-ms = <30>;
            bindings
                = <&kp LPAR &kp RPAR &kp LEFT>;
        };
	// https://github.com/caksoylar/zmk-config/blob/main/config/3x5.keymap
	bstab: backspace_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_TAB";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp TAB>;
            mods = <MOD_LALT>;
        };
	pair_bkt: pair_bkt {
            label = "pair_bkt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <30>;
            tap-ms = <30>;
            bindings
                = <&kp LBKT &kp RBKT &kp LEFT>;
        };
	pair_brc: pair_brc {
            label = "pair_brc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <30>;
            tap-ms = <30>;
            bindings
                = <&kp LBRC &kp RBRC &kp LEFT>;
        };
     };
/*                KEY POSITIONS
  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */
    #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM) \
        combo_##NAME { \
            timeout-ms = <TERM>; \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
        };
    combos {
        compatible = "zmk,combos";
	
	COMBO(word_return, &word_return,    11 13  , BASE QWE, 50)//RT
	COMBO(tog_qwerty , &tog QWE    ,    0 1 17 , BASE QWE, 50)//QWE
	COMBO(tog_game   , &tog GME    ,  14 15 17 , BASE GME, 50)//GME
	
    };
        keymap {
                compatible = "zmk,keymap";
            // Base alpha layer    
       		default_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	        &kp Q         &kp W         &kp F         &kp P        &kp B 		   &kp J        &kp L         &kp U         &kp Y    &mt RC(RSFT) SQT
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		&kp A         &kp R         &kp S         &kp T        &kp G 		   &kp M        &kp N         &kp E         &kp I        &kp O
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	     &mt LCTRL Z    &mt LGUI X    &mt LALT C      &kp D        &kp V	           &kp K        &kp H     &mt RALT CMMA  &mt RGUI DOT &mt RCTRL FSLH
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          			                     &mt LSFT ENTER  &lt NAV BSPC     &lt NUM SPACE  &lt FNC TAB
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};
		
		qwerty_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	        &kp Q         &kp W         &kp E         &kp R        &kp T 		   &kp Y        &kp U         &kp I         &kp O     &mt RC(RSFT) P
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		&kp A         &kp S         &kp D         &kp F        &kp G 		   &kp H        &kp J         &kp K         &kp L       &kp SEMI
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	     &mt LCTRL Z    &mt LGUI X    &mt LALT C      &kp V        &kp B	           &kp N        &kp M     &mt RALT CMMA  &mt RGUI DOT &mt RCTRL FSLH
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          			                     &mt LSFT ENTER  &lt NAV BSPC     &lt NUM SPACE  &lt FNC TAB
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};
		
		game_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	        &kp Q         &kp W         &kp F         &kp P        &kp B 		   &kp J        &kp L         &kp U         &kp Y       &kp SQT
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		&kp A         &kp R         &kp S         &kp T        &kp G 		   &kp M        &kp N         &kp E         &kp I        &kp O
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	        &kp Z         &kp X         &kp C         &kp D        &kp V	           &kp K        &kp H        &kp CMMA      &kp DOT      &kp FSLH
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          			                        &kp ENTER     &kp BSPC           &kp SPACE     &kp TAB
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};

       		num_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	       &kp TILDE     &kp EXCL     &kp PLUS      &kp DLLR       &kp AT	       &kp C_VOL_UP   &kp NUM_4     &kp NUM_5     &kp NUM_6     &kp PIPE
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	       &kp FSLH      &kp STAR     &kp MINUS     &kp EQUAL     &kp HASH	       &kp C_VOL_DN   &kp NUM_1     &kp NUM_2     &kp NUM_3     &kp NUM_0 
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	       &kp GRAVE      &kp LT       &kp GT       &kp BSLH      &kp PRCNT          &kp C_PP     &kp NUM_7     &kp NUM_8     &kp NUM_9     &kp DOT 
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					               &caps_word      &kp DEL            &trans      &kp NUM_0 
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};
		
		nav_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	       &kp ESC       &kp PG_UP     &kp UP       &kp PG_DN     &kp INS            &kp RBKT     &pair_bkt     &kp COLON     &kp SEMI      &kp PIPE 
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	       &kp HOME      &kp LEFT     &kp DOWN      &kp RIGHT     &kp END            &kp RPAR     &pair_par     &kp UNDER     &kp SQT       &kp DQT
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	       &kp LC(Z)     &kp LG(X)    &kp LA(C)     &kp K_APP     &kp PSCRN          &kp RBRC     &pair_brc     &kp CARET     &kp PIPE      &kp AMPS
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	                                                  &trans       &trans             &trans       &trans 
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};	
		
		func_layer {
		bindings = <
	// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
	        &trans        &trans        &trans        &trans       &trans             &trans       &kp F4        &kp F5        &kp F6       &kp F11
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	      &bt BT_CLR    &bt BT_NXT     &bt BT_PRV     &trans       &trans             &trans       &kp F1        &kp F2        &kp F3       &kp F10  
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	        &trans        &trans        &trans        &trans       &trans             &trans       &kp F7        &kp F8        &kp F9       &kp F12  
	// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
	                                                  &trans       &trans             &trans       &trans 
	// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
		>;
		};	
        
	};
};
